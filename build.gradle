// Execute Tasks in SubModule: gradle MODUL:clean build
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath("de.freese.gradle:gradle-plugins:$version_myConventionPlugin")
        classpath("io.spring.gradle:dependency-management-plugin:$version_springDependencyManagement")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$version_springBoot")
        classpath("org.openjfx:javafx-plugin:$version_javafxPlugin")
    }
}

subprojects {
    apply plugin: "java"
//    apply plugin: "maven-publish"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "de.freese.gradle.plugin.conventions"

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            dependency("ch.qos.logback.db:logback-classic-db:$version_logbackClassicDb")
            dependency("com.danielflower.apprunner:javasysmon:$version_javasysmon")
            dependency("com.lmax:disruptor:$version_disruptor")
            dependency("dev.failsafe:failsafe:$version_failsafe")
            dependency("org.apache.commons:commons-compress:$version_commonsCompress")
            dependency("org.apache.lucene:lucene-analyzers-common:$version_lucene")

            dependencySet(group: "org.apache.maven", version: "$version_maven") {
                entry "maven-model-builder"
                entry "maven-settings-builder"
            }

            dependencySet(group: "org.apache.tomcat", version: dependencyManagement.importedProperties["tomcat.version"]) {
                entry "tomcat-catalina"
                entry "tomcat-juli"
            }

            dependencySet(group: "org.apache.xmlgraphics", version: "$version_batik") {
                entry "batik-codec"
                entry "batik-swing"
            }

            dependency("org.codehaus.plexus:plexus-cipher:$version_plexusCipher")
            dependency("org.codehaus.plexus:plexus-container-default:$version_plexus")
            dependency("org:jaudiotagger:$version_jaudiotagger")
            dependency("org.jsoup:jsoup:$version_jsoup")

            dependency("org.jfree:jfreechart:$version_jfreechart") {
                exclude "com.lowagie:itext"
                exclude "xml-apis:xml-apis"
            }

            dependency("org.apache.velocity:velocity-engine-core:$version_velocity")
        }
    }

    dependencies {
        testImplementation("org.junit.jupiter:junit-jupiter")
        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    }
}
